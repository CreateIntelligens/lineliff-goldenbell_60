{
    "openapi": "3.1.0",
    "info": {
        "title": "Line CRM - Yun Local",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "https://lineoa.laravel.test/api"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/audiences/bulk": {
            "post": {
                "operationId": "audiences.save_bulk",
                "summary": "\u6279\u91cf\u65b0\u589e/\u4fee\u6539\u53d7\u773e",
                "tags": [
                    "Audience"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSaveBulkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "affected_count": {
                                                    "type": "integer"
                                                },
                                                "exists_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "affected_count",
                                                "exists_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/audiences": {
            "get": {
                "operationId": "audiences.index",
                "tags": [
                    "Audience"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: id",
                        "schema": {
                            "type": "string"
                        },
                        "example": "sort=id or sort=-id"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: line_users",
                        "schema": {
                            "type": "string"
                        },
                        "example": "include=line_users"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter by one or more fields. in: name",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "object",
                                    "properties": {
                                        "$contains": {
                                            "type": "string",
                                            "description": "filter by name. $contains: string",
                                            "example": "filter[name][$contains]=string"
                                        }
                                    }
                                }
                            }
                        },
                        "example": "filter[name][$contains]=string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "audiences.store",
                "tags": [
                    "Audience"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/audiences/{id}": {
            "get": {
                "operationId": "audiences.show",
                "tags": [
                    "Audience"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "audiences.update",
                "tags": [
                    "Audience"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "audiences.destroy",
                "tags": [
                    "Audience"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/generate-avatar": {
            "post": {
                "operationId": "avatar.generate",
                "summary": "\u8655\u7406\u7167\u7247\u4e0a\u50b3\u4e26\u751f\u6210\u982d\u50cf",
                "tags": [
                    "Avatar"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream",
                                        "maxLength": 5120
                                    }
                                },
                                "required": [
                                    "userId",
                                    "file"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u8655\u7406\u8acb\u6c42\u6642\u767c\u751f\u932f\u8aa4\uff0c\u8acb\u67e5\u770b\u7167\u7247\u4e0a\u50b3\u6ce8\u610f\u4e8b\u9805"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "task_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "task_id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/generate-avatar/status/{taskId}": {
            "get": {
                "operationId": "avatar.status",
                "summary": "\u6aa2\u67e5\u4efb\u52d9\u72c0\u614b",
                "tags": [
                    "Avatar"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u6aa2\u67e5\u4efb\u52d9\u72c0\u614b\u5931\u6557"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "state": {
                                            "type": "integer",
                                            "enum": [
                                                10,
                                                20,
                                                0
                                            ]
                                        },
                                        "images": {
                                            "anyOf": [
                                                {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "minItems": 1,
                                                    "maxItems": 1,
                                                    "additionalItems": false
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "state",
                                        "images"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/generate-avatar/user/{userId}/avatars": {
            "get": {
                "operationId": "avatar.user.avatars",
                "summary": "\u7372\u53d6\u7528\u6236\u7684\u6b77\u53f2\u751f\u6210\u5716\u7247",
                "tags": [
                    "Avatar"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u7372\u53d6\u6b77\u53f2\u8a18\u9304\u5931\u6557"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "avatars": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "avatars"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "result"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "operationId": "campaigns.index",
                "tags": [
                    "Campaign"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: created_at, send_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: tags, audiences",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "object",
                                    "description": "filter by name",
                                    "example": "filter[name][$contains]=John",
                                    "properties": {
                                        "$contains": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "$contains"
                                    ]
                                },
                                "status": {
                                    "description": "filter by status",
                                    "example": "filter[status]=1",
                                    "$ref": "#/components/schemas/CampaignStatus"
                                }
                            },
                            "required": [
                                "name",
                                "status"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "campaigns.store",
                "tags": [
                    "Campaign"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "operationId": "campaigns.show",
                "tags": [
                    "Campaign"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: tags, audiences",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "put": {
                "operationId": "campaigns.update",
                "tags": [
                    "Campaign"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "campaigns.destroy",
                "tags": [
                    "Campaign"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{campaignId}/insights": {
            "get": {
                "operationId": "campaigns.log.index",
                "tags": [
                    "CampaignLog"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations": {
            "get": {
                "operationId": "conversations.index",
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 0,
                                            "maxItems": 0,
                                            "additionalItems": false
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{conversation_id}": {
            "patch": {
                "operationId": "conversations.update",
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "assigned_to": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "sender_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "sender_id is a foreign key to the senders table"
                                    },
                                    "read": {
                                        "type": [
                                            "boolean",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "set_read": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data",
                                        "set_read"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/conversations/by-user/{user_id}": {
            "get": {
                "operationId": "conversations.findOrCreate",
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "conversation_id": {
                                                    "type": "string"
                                                },
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "type": "boolean"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "assigned_to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "conversation_id",
                                                "user_id",
                                                "name",
                                                "created",
                                                "status",
                                                "assigned_to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conversations/{id}/messages": {
            "get": {
                "operationId": "conversations.messages",
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Conversation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "conversations.sendMessage",
                "tags": [
                    "Conversation"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "enum": [
                                            "text",
                                            "image",
                                            "file",
                                            "video"
                                        ]
                                    },
                                    "content": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream",
                                        "maxLength": 10240
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "\u522a\u9664\u8a0a\u606f",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Reply token failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u975e\u6307\u6d3e\u4eba\u54e1\u7121\u6cd5\u767c\u9001"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Conversation not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/coupons/codes/redeem": {
            "post": {
                "operationId": "coupons.codes.redeem",
                "tags": [
                    "Coupon"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponCodeRedeemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/coupons/codes/cancel": {
            "post": {
                "operationId": "coupons.codes.cancel",
                "summary": "Cancel a coupon code",
                "tags": [
                    "Coupon"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponCodeCancelRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/coupons/codes/lock": {
            "put": {
                "operationId": "coupons.codes.lock",
                "summary": "Update coupon code lock status",
                "tags": [
                    "Coupon"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponCodeLockRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/coupons/{id}/codes/assign": {
            "post": {
                "operationId": "coupons.codes.assign",
                "tags": [
                    "Coupon"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponAssignCodesToUsersRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/coupons/codes/{code}": {
            "get": {
                "operationId": "coupons.codes.show",
                "description": "- \u4e0d\u9069\u7528\u67e5\u8a62\u975e\u552f\u4e00\u78bc\u7684\u512a\u60e0\u5238",
                "summary": "\u986f\u793a\u7279\u5b9a\u512a\u60e0\u78bc\u7684\u8a73\u60c5",
                "tags": [
                    "Coupon",
                    "CouponCode"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/UserCouponCode"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coupons/{couponId}/codes": {
            "get": {
                "operationId": "coupons.codes.index",
                "summary": "\u986f\u793a\u7279\u5b9a\u512a\u60e0\u5238\u7684\u512a\u60e0\u78bc\u5217\u8868",
                "tags": [
                    "Coupon",
                    "CouponCode"
                ],
                "parameters": [
                    {
                        "name": "couponId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: created_at, updated_at",
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: coupon",
                        "schema": {
                            "type": "string"
                        },
                        "example": "coupon"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "code": {
                                                                "type": "string"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            },
                                                            "limit_qty": {
                                                                "type": "integer"
                                                            },
                                                            "used_qty": {
                                                                "type": "integer"
                                                            },
                                                            "remaining_qty": {
                                                                "type": "integer"
                                                            },
                                                            "redeemed_qty": {
                                                                "type": "integer"
                                                            },
                                                            "cancelled_qty": {
                                                                "type": "integer"
                                                            },
                                                            "redeemed_method": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "redeemed_by": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "redeemed_at": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "created_at": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "updated_at": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "code",
                                                            "status",
                                                            "limit_qty",
                                                            "used_qty",
                                                            "remaining_qty",
                                                            "redeemed_qty",
                                                            "cancelled_qty",
                                                            "redeemed_method",
                                                            "redeemed_by",
                                                            "redeemed_at",
                                                            "created_at",
                                                            "updated_at"
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/coupons/{id}": {
            "post": {
                "operationId": "coupons.update",
                "tags": [
                    "Coupon"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "get": {
                "operationId": "coupons.show",
                "tags": [
                    "Coupon"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: codes",
                        "schema": {
                            "type": "string",
                            "default": "codes"
                        },
                        "example": "codes"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "coupons.destroy",
                "tags": [
                    "Coupon"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "operationId": "coupons.index",
                "tags": [
                    "Coupon"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: created_at, start_date",
                        "schema": {
                            "type": "string"
                        },
                        "example": "created_at,-start_date"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: codes",
                        "schema": {
                            "type": "string"
                        },
                        "example": "codes"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "coupons.store",
                "tags": [
                    "Coupon"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/file_upload": {
            "post": {
                "operationId": "file_upload.store",
                "tags": [
                    "File"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FileUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/gba60/images": {
            "get": {
                "operationId": "gba60.images.index",
                "summary": "\u7528\u6236\u751f\u6210\u5716\u7247\u6b77\u53f2\u7d00\u9304",
                "tags": [
                    "GBA60Image"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cheer",
                                "award_speech"
                            ]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        },
                                        "event_type": {
                                            "type": "string"
                                        },
                                        "event_name": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "string"
                                        },
                                        "limit": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "event_type",
                                        "event_name",
                                        "total",
                                        "limit"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            },
            "post": {
                "operationId": "gba60.images.store",
                "summary": "\u5132\u5b58\u7528\u6236\u751f\u6210\u7684\u5716\u7247\u53ca\u8cc7\u6599",
                "tags": [
                    "GBA60Image"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "event_type": {
                                        "type": "string",
                                        "enum": [
                                            ""
                                        ]
                                    },
                                    "text": {
                                        "type": "string",
                                        "maxLength": 500
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream",
                                        "maxLength": 1024
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "event_type",
                                    "text",
                                    "image"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/gba60/images/count": {
            "get": {
                "operationId": "gba60.images.count",
                "summary": "\u7528\u6236\u751f\u6210\u5716\u7247\u6578\u91cf\u53ca\u5269\u9918\u53ef\u751f\u6210\u6b21\u6578",
                "tags": [
                    "GBA60Image"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cheer",
                                "award_speech"
                            ]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "event_type": {
                                                    "type": "string"
                                                },
                                                "event_name": {
                                                    "type": "string"
                                                },
                                                "current_count": {
                                                    "type": "string"
                                                },
                                                "limit": {
                                                    "type": "string"
                                                },
                                                "remaining": {
                                                    "type": "string"
                                                },
                                                "can_upload": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "event_type",
                                                "event_name",
                                                "current_count",
                                                "limit",
                                                "remaining",
                                                "can_upload"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/gba60/images/{id}": {
            "get": {
                "operationId": "gba60.images.show",
                "summary": "\u67e5\u770b\u55ae\u5f35\u5716\u7247\u8a73\u60c5",
                "tags": [
                    "GBA60Image"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "\u53ef\u4ee5\u6dfb\u52a0\u984d\u5916\u7684\u6b0a\u9650\u6aa2\u67e5\uff0c\u4f8b\u5982\u78ba\u8a8d\u662f\u5426\u70ba\u8a72\u7528\u6236\u7684\u5716\u7247",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u7121\u6b0a\u9650\u67e5\u770b\u6b64\u5716\u7247"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u5716\u7247\u4e0d\u5b58\u5728"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/invite": {
            "get": {
                "operationId": "invite.index",
                "tags": [
                    "Invite"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "invite.store",
                "tags": [
                    "Invite"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/invite/{id}": {
            "get": {
                "operationId": "invite.show",
                "tags": [
                    "Invite"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "invite.update",
                "tags": [
                    "Invite"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "invite.destroy",
                "tags": [
                    "Invite"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invite/shareSuccess": {
            "post": {
                "operationId": "invite.shareSuccess",
                "tags": [
                    "Invite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "uid": {
                                        "type": "string"
                                    },
                                    "activity_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invite/publish/{id}": {
            "post": {
                "operationId": "invite.publish",
                "tags": [
                    "Invite"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u767c\u4f48\u6210\u529f"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/keywords/answer": {
            "get": {
                "operationId": "keywords.answer",
                "description": "* \u662f webhook endpoint \u4f7f\u7528\u7684 API",
                "summary": "Get the answer for the keyword",
                "tags": [
                    "Keyword"
                ],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 200
                        }
                    },
                    {
                        "name": "line_user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reply_token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 54
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/keywords/exists": {
            "get": {
                "operationId": "keywords.exists",
                "tags": [
                    "Keyword"
                ],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "maxLength": 200
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/keywords": {
            "get": {
                "operationId": "keywords.index",
                "tags": [
                    "Keyword"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: id, created_at",
                        "schema": {
                            "type": "string"
                        },
                        "example": "id"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: extend_keywords, keyword_message_answers",
                        "schema": {
                            "type": "string"
                        },
                        "example": "extend_keywords,keyword_message_answers"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "is_active": {
                                    "type": "boolean"
                                },
                                "is_quick_reply": {
                                    "type": "boolean"
                                },
                                "keyword": {
                                    "type": "object",
                                    "properties": {
                                        "$contains": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "keywords.store",
                "tags": [
                    "Keyword"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KeywordStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/keywords/{id}": {
            "get": {
                "operationId": "keywords.show",
                "tags": [
                    "Keyword"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: extend_keywords, keyword_message_answers",
                        "schema": {
                            "type": "string"
                        },
                        "example": "extend_keywords,keyword_message_answers"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "put": {
                "operationId": "keywords.update",
                "tags": [
                    "Keyword"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KeywordUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "keywords.destroy",
                "tags": [
                    "Keyword"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/line": {
            "get": {
                "operationId": "metrics.line",
                "tags": [
                    "LineMetrics"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "numberOfFollowers": {
                                            "description": "status: ready|unready|errorMsg<br>\nfollowers: \u76ee\u524d\u7d71\u8a08\u597d\u53cb\u6578<br>\nfollowersChange: \u4eca\u5929\u8ddf\u6628\u5929\u7d71\u8a08\u597d\u53cb\u6578\u8b8a\u5316<br>\ntargetedReaches: \u76ee\u524d\u6d3b\u8e8d\u597d\u53cb\u6578<br>\ntargetedReachesChange: \u4eca\u5929\u8ddf\u6628\u5929\u6d3b\u8e8d\u597d\u53cb\u6578\u8b8a\u5316<br>\nblocks: \u76ee\u524d\u5c01\u9396\u597d\u53cb\u6578<br>\nblocksChange: \u4eca\u5929\u8ddf\u6628\u5929\u5c01\u9396\u597d\u53cb\u6578\u8b8a\u5316",
                                            "anyOf": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "followers": {
                                                            "type": "null"
                                                        },
                                                        "followersChange": {
                                                            "type": "null"
                                                        },
                                                        "targetedReaches": {
                                                            "type": "null"
                                                        },
                                                        "targetedReachesChange": {
                                                            "type": "null"
                                                        },
                                                        "blocks": {
                                                            "type": "null"
                                                        },
                                                        "blocksChange": {
                                                            "type": "null"
                                                        }
                                                    },
                                                    "required": [
                                                        "status",
                                                        "followers",
                                                        "followersChange",
                                                        "targetedReaches",
                                                        "targetedReachesChange",
                                                        "blocks",
                                                        "blocksChange"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "status": {
                                                            "type": "string"
                                                        },
                                                        "followers": {
                                                            "type": "string"
                                                        },
                                                        "followersChange": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "targetedReaches": {
                                                            "type": "string"
                                                        },
                                                        "targetedReachesChange": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "blocks": {
                                                            "type": "string"
                                                        },
                                                        "blocksChange": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "status",
                                                        "followers",
                                                        "followersChange",
                                                        "targetedReaches",
                                                        "targetedReachesChange",
                                                        "blocks",
                                                        "blocksChange"
                                                    ]
                                                }
                                            ]
                                        },
                                        "quotaAndConsumption": {
                                            "type": "object",
                                            "description": "see https://developers.line.biz/en/reference/messaging-api/#get-quota<br>\nsee https://developers.line.biz/en/reference/messaging-api/#get-consumption<br>\ntype: limited|none<br>\nvalue: Not always included<br>\ntotalUsage",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "totalUsage": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "type",
                                                "totalUsage"
                                            ]
                                        },
                                        "numberOfFollowersPeriod": {
                                            "type": "array",
                                            "description": "5\u5929\u5167\u597d\u53cb\u7d71\u8a08",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 0,
                                            "maxItems": 0,
                                            "additionalItems": false
                                        }
                                    },
                                    "required": [
                                        "numberOfFollowers",
                                        "quotaAndConsumption",
                                        "numberOfFollowersPeriod"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/aitago": {
            "get": {
                "operationId": "metrics.aitago",
                "tags": [
                    "LineMetrics"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "usedCampaignsCount": {
                                            "type": "string",
                                            "description": "\u8a0a\u606f\u767c\u9001\u7e3d\u6578"
                                        },
                                        "usedCampaigns": {
                                            "type": "array",
                                            "description": "5\u5929\u5167\u6bcf\u65e5\u767c\u9001\u6578\u91cf",
                                            "items": {}
                                        },
                                        "shortUrlClicksCount": {
                                            "type": "string",
                                            "description": "\u9023\u7d50\u9ede\u64ca\u7e3d\u6578"
                                        },
                                        "shortUrlClicks": {
                                            "type": "array",
                                            "description": "5\u5929\u5167\u6bcf\u65e5\u9ede\u64ca\u6578\u91cf",
                                            "items": {}
                                        },
                                        "popularShortLinks": {
                                            "type": "string",
                                            "description": "\u9ede\u64ca\u6578\u524d10\u540d"
                                        },
                                        "tagDistribution": {
                                            "type": "string",
                                            "description": "\u6a19\u7c64\u5206\u5e03"
                                        },
                                        "interactionRate": {
                                            "type": "string",
                                            "description": "\u4e92\u52d5\u7387"
                                        }
                                    },
                                    "required": [
                                        "usedCampaignsCount",
                                        "usedCampaigns",
                                        "shortUrlClicksCount",
                                        "shortUrlClicks",
                                        "popularShortLinks",
                                        "tagDistribution",
                                        "interactionRate"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/short_url": {
            "get": {
                "operationId": "metrics.short_url",
                "tags": [
                    "LineMetrics"
                ],
                "parameters": [
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "tag name or id",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "shortUrlClicks": {
                                            "type": "string"
                                        },
                                        "tagDistribution": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "shortUrlClicks",
                                        "tagDistribution"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/metrics/user_tagging": {
            "get": {
                "operationId": "metrics.user_tagging",
                "tags": [
                    "LineMetrics"
                ],
                "parameters": [
                    {
                        "name": "start_at",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_at",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/lineOA/broadcast/{id}": {
            "post": {
                "operationId": "lineOA.broadcast",
                "summary": "\u5ee3\u64ad\u6d3b\u52d5\u8a0a\u606f\u7d66\u7528\u6236",
                "tags": [
                    "LineSDK"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "\u6d3b\u52d5ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/line_users/export": {
            "get": {
                "operationId": "line_users.export",
                "tags": [
                    "LineUsers"
                ],
                "parameters": [
                    {
                        "name": "chunk",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 1000
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/line_users/tagging_tag": {
            "put": {
                "operationId": "line_users.tagging_tag",
                "summary": "line user tagging tag",
                "tags": [
                    "LineUsers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LineUserTaggingTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/line_users/batch_tagging_tag": {
            "post": {
                "operationId": "line_users.batch_tagging_tag",
                "summary": "line user batch tagging tag",
                "tags": [
                    "LineUsers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LineUserBatchTaggingTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "line_users": {
                                                    "type": "object",
                                                    "properties": {
                                                        "line_user_ids": {
                                                            "type": "array",
                                                            "items": {}
                                                        },
                                                        "emails": {
                                                            "type": "array",
                                                            "items": {}
                                                        }
                                                    },
                                                    "required": [
                                                        "line_user_ids",
                                                        "emails"
                                                    ]
                                                },
                                                "tags": {
                                                    "type": "object",
                                                    "properties": {
                                                        "ids": {
                                                            "type": "array",
                                                            "items": {}
                                                        },
                                                        "names": {
                                                            "type": "array",
                                                            "items": {}
                                                        }
                                                    },
                                                    "required": [
                                                        "ids",
                                                        "names"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "line_users",
                                                "tags"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/line_users/profile/{lineUserId}": {
            "put": {
                "operationId": "line_users.update_profile",
                "summary": "\u7528\u65bc\u6536\u96c6 line \u4f7f\u7528\u8005\u56de\u586b\u7684\u8cc7\u6599",
                "tags": [
                    "LineUsers"
                ],
                "parameters": [
                    {
                        "name": "lineUserId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LineUserUpdateProfileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "get": {
                "operationId": "line_users.get_profile",
                "tags": [
                    "LineUsers"
                ],
                "parameters": [
                    {
                        "name": "lineUserId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/line_users/check_binding_status": {
            "get": {
                "operationId": "line_users.check_binding",
                "summary": "\u6aa2\u67e5 LINE userId \u548c email \u7684\u7d81\u5b9a\u72c0\u614b",
                "tags": [
                    "LineUsers"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "line_user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/line_users": {
            "get": {
                "operationId": "line_users.index",
                "tags": [
                    "LineUsers"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: id, last_msg_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: tags, audiences, click_short_urls, coupon_codes",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/line_users/{id}": {
            "get": {
                "operationId": "line_users.show",
                "tags": [
                    "LineUsers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: tags, audiences, click_short_urls, coupon_codes",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "put": {
                "operationId": "line_users.update",
                "tags": [
                    "LineUsers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LineUserUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/line_users/tag/purge": {
            "post": {
                "operationId": "lineUsers.tagPurge",
                "tags": [
                    "LineUsers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "line_user_id": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "line_user_id",
                                    "tags"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/line/webhook": {
            "post": {
                "operationId": "line.webhook",
                "summary": "Handle the incoming request",
                "tags": [
                    "LineWebhook"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/marketing_scripts": {
            "get": {
                "operationId": "marketing_scripts.index",
                "tags": [
                    "MarketingScript"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: id, start_at, end_at",
                        "schema": {
                            "type": "string"
                        },
                        "example": "sort=id,-start_at"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: script_items",
                        "schema": {
                            "type": "string"
                        },
                        "example": "include=script_items"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "is_active": {
                                    "type": "boolean"
                                },
                                "name": {
                                    "type": "object",
                                    "properties": {
                                        "$contains": {
                                            "type": "string",
                                            "description": "filter by name. in: string",
                                            "example": "filter[name][$contains]=string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "marketing_scripts.store",
                "tags": [
                    "MarketingScript"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketingScriptStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/marketing_scripts/{id}": {
            "get": {
                "operationId": "marketing_scripts.show",
                "tags": [
                    "MarketingScript"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: script_items",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "put": {
                "operationId": "marketing_scripts.update",
                "tags": [
                    "MarketingScript"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketingScriptUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "marketing_scripts.destroy",
                "tags": [
                    "MarketingScript"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/materials/convert_line_message": {
            "post": {
                "operationId": "materials.convert_line_message",
                "summary": "\u8f49\u63db\u7d20\u6750\u70ba LINE \u8a0a\u606f\u683c\u5f0f",
                "tags": [
                    "Material"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaterialConvertLineMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/materials": {
            "get": {
                "operationId": "materials.index",
                "tags": [
                    "Material"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "materials.store",
                "tags": [
                    "Material"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaterialStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/materials/{id}": {
            "get": {
                "operationId": "materials.show",
                "tags": [
                    "Material"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "put": {
                "operationId": "materials.update",
                "tags": [
                    "Material"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaterialUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "materials.destroy",
                "tags": [
                    "Material"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roadshow/templates": {
            "get": {
                "operationId": "roadshow.templates",
                "tags": [
                    "MbtiAvatar"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u7372\u53d6\u6a21\u677f\u5931\u6557"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roadshow": {
            "post": {
                "operationId": "roadshow.generate",
                "summary": "\u4e0a\u50b3\u5716\u7247\u4e26\u751f\u6210\u982d\u50cf",
                "tags": [
                    "MbtiAvatar"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream",
                                        "maxLength": 5120
                                    },
                                    "template_id": {
                                        "type": "string"
                                    },
                                    "target_face_index": {
                                        "type": "integer"
                                    },
                                    "userInfo": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "userId",
                                    "file",
                                    "template_id",
                                    "target_face_index"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u8655\u7406\u8acb\u6c42\u6642\u767c\u751f\u932f\u8aa4\uff0c\u8acb\u67e5\u770b\u7167\u7247\u4e0a\u50b3\u6ce8\u610f\u4e8b\u9805"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "task_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "task_id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roadshow/status/{taskId}": {
            "get": {
                "operationId": "roadshow.status",
                "summary": "\u6aa2\u67e5\u4efb\u52d9\u72c0\u614b",
                "tags": [
                    "MbtiAvatar"
                ],
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u6aa2\u67e5\u4efb\u52d9\u72c0\u614b\u5931\u6557"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "status: [pending, processing, completed, failed]"
                                        },
                                        "images": {
                                            "anyOf": [
                                                {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "minItems": 1,
                                                    "maxItems": 1,
                                                    "additionalItems": false
                                                },
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            ]
                                        },
                                        "template_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "status",
                                        "images",
                                        "template_id"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roadshow/user/{userId}/avatars": {
            "get": {
                "operationId": "roadshow.user.avatars",
                "summary": "\u7372\u53d6\u7528\u6236\u7684\u6b77\u53f2\u751f\u6210\u5716\u7247",
                "tags": [
                    "MbtiAvatar"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "error"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u7372\u53d6\u6b77\u53f2\u8a18\u9304\u5931\u6557"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "status: [pending, processing, completed, failed]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roadshow/files": {
            "post": {
                "operationId": "roadshow.upload_file",
                "tags": [
                    "MbtiAvatar"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream",
                                        "maxLength": 204800
                                    },
                                    "uid": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "file",
                                    "uid"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "path"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "operationId": "messages.index",
                "tags": [
                    "Message"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/messages/{id}": {
            "put": {
                "operationId": "messages.update",
                "tags": [
                    "Message"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "content": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "enum": [
                                            "text",
                                            "image",
                                            "file",
                                            "video"
                                        ]
                                    }
                                },
                                "required": [
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/messages/{id}/share": {
            "post": {
                "operationId": "messages.share",
                "tags": [
                    "Message"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "target_id": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "target_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TODO: \u9019\u88e1\u6c92\u6709\u5be6\u969b\u50b3\u9001\u7d66 LINE \u7528\u6236\uff0c\u5f85PM\u6307\u793a\u518d\u505a\u4fee\u5fa9",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "shared_message_id": {
                                                    "type": "string"
                                                },
                                                "new_message_id": {
                                                    "type": "string"
                                                },
                                                "shared_to_conversation": {
                                                    "type": "string"
                                                },
                                                "note": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "shared_message_id",
                                                "new_message_id",
                                                "shared_to_conversation",
                                                "note"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/notes/{user_id}": {
            "get": {
                "operationId": "notes.index",
                "summary": "\u67e5\u8a62\u6307\u5b9a\u4f7f\u7528\u8005\u7684\u7b46\u8a18\u5217\u8868",
                "tags": [
                    "Note"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notes": {
            "post": {
                "operationId": "notes.store",
                "tags": [
                    "Note"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/notes/{id}": {
            "put": {
                "operationId": "notes.update",
                "tags": [
                    "Note"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "content": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "notes.destroy",
                "tags": [
                    "Note"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "success"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/playground/get_lottery": {
            "get": {
                "operationId": "playground.getLottery",
                "tags": [
                    "Playground"
                ],
                "parameters": [
                    {
                        "name": "uid",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "game_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "enum": [
                                                "\u8acb\u6d3d\u8a62\u7ba1\u7406\u54e1"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "msg"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "msg"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/playground/info/{id}": {
            "get": {
                "operationId": "playground.info",
                "tags": [
                    "Playground"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/playground/lottery": {
            "post": {
                "operationId": "playground.draw",
                "tags": [
                    "Playground"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "uid": {
                                        "type": "string"
                                    },
                                    "game_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "enum": [
                                                "\u8acb\u6d3d\u8a62\u7ba1\u7406\u54e1"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "msg"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "msg"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/playground": {
            "get": {
                "operationId": "playground.index",
                "tags": [
                    "Playground"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "playground.store",
                "tags": [
                    "Playground"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaygroundRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/playground/{id}": {
            "get": {
                "operationId": "playground.show",
                "tags": [
                    "Playground"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "playground.update",
                "tags": [
                    "Playground"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlaygroundRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "playground.destroy",
                "tags": [
                    "Playground"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/playground/publish/{id}": {
            "post": {
                "operationId": "playground.publish",
                "tags": [
                    "Playground"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u767c\u4f48\u6210\u529f"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/poll": {
            "get": {
                "operationId": "poll.index",
                "tags": [
                    "Poll"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "poll.store",
                "tags": [
                    "Poll"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PollRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/poll/{id}": {
            "get": {
                "operationId": "poll.show",
                "tags": [
                    "Poll"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "poll.update",
                "tags": [
                    "Poll"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PollRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "poll.destroy",
                "tags": [
                    "Poll"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/poll/publish/{id}": {
            "post": {
                "operationId": "poll.publish",
                "tags": [
                    "Poll"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u767c\u4f48\u6210\u529f"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prizes": {
            "post": {
                "operationId": "prizes.store",
                "tags": [
                    "Prize"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePrizeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u734e\u9805\u5275\u5efa\u6210\u529f"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u6d3b\u52d5\u5df2\u6709\u734e\u9805"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u6d3b\u52d5\u4e0d\u5b58\u5728"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/prizes/batch": {
            "put": {
                "operationId": "prizes.update-batch",
                "tags": [
                    "Prize"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePrizeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u6d3b\u52d5\u4e0d\u5b58\u5728"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/prizes/{prize}": {
            "put": {
                "operationId": "prizes.update",
                "tags": [
                    "Prize"
                ],
                "parameters": [
                    {
                        "name": "prize",
                        "in": "path",
                        "required": true,
                        "description": "The prize ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePrizeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u734e\u9805\u66f4\u65b0\u6210\u529f"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Prize"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/registration": {
            "post": {
                "operationId": "registration.store",
                "tags": [
                    "Registration"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "lineUserId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "success"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/registration/reject": {
            "post": {
                "operationId": "registration.reject",
                "tags": [
                    "Registration"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "lineUserId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "success"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/registration-campaign/{campaign}": {
            "post": {
                "operationId": "registration.campaign.store",
                "tags": [
                    "Registration"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "note": {
                                        "type": "string"
                                    },
                                    "lineUserId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "success"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rich_menus/{id}/set_default": {
            "put": {
                "operationId": "rich_menus.set_default",
                "tags": [
                    "Richmenu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RichmenuSetDefaultRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/rich_menus/{id}/assign_to_user": {
            "post": {
                "operationId": "rich_menus.assign_to_user",
                "tags": [
                    "Richmenu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RichmenuAssignToUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/rich_menus": {
            "get": {
                "operationId": "rich_menus.index",
                "tags": [
                    "Richmenu"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: id,created_at",
                        "schema": {
                            "type": "string"
                        },
                        "example": "sort=id,-created_at"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "is_default": {
                                    "type": "boolean",
                                    "description": "filter by is_default.",
                                    "example": "filter[is_default]=true"
                                },
                                "name": {
                                    "type": "object",
                                    "properties": {
                                        "$contains": {
                                            "type": "string",
                                            "description": "filter by name. $contains: string",
                                            "example": "filter[name][$contains]=test"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "rich_menus.store",
                "tags": [
                    "Richmenu"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RichmenuStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/rich_menus/{id}": {
            "get": {
                "operationId": "rich_menus.show",
                "tags": [
                    "Richmenu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "rich_menus.update",
                "tags": [
                    "Richmenu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RichmenuUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "rich_menus.destroy",
                "tags": [
                    "Richmenu"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/senders": {
            "get": {
                "operationId": "senders.index",
                "tags": [
                    "Sender"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "senders.store",
                "tags": [
                    "Sender"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/senders/{id}": {
            "get": {
                "operationId": "senders.show",
                "tags": [
                    "Sender"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "senders.update",
                "tags": [
                    "Sender"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SenderUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "senders.destroy",
                "tags": [
                    "Sender"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/short_urls/transfer": {
            "get": {
                "operationId": "short_urls.transfer",
                "description": "* liff \u61c9\u7528\u7a0b\u5f0f\u4f7f\u7528\u7684 API",
                "summary": "Retrieve Short URL Redirect Target",
                "tags": [
                    "ShortUrl"
                ],
                "parameters": [
                    {
                        "name": "line_user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "short_url_slug",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "click_session_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "joined_oa",
                        "in": "query",
                        "schema": {
                            "type": [
                                "boolean",
                                "null"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/short_urls": {
            "get": {
                "operationId": "short_urls.index",
                "tags": [
                    "ShortUrl"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter by one or more fields. in: title, slug, tags\n- example: filter[title][$contains]=string&filter[slug][$contains]=string&filter[tags][$has][name][$contains]=string\n- example: filter[$or][title][$eq]=string&filter[$or][slug][$eq]=string&filter[$or][tags][$has][name][$eq]=string",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: id, created_at, click_count, click_user_count",
                        "schema": {
                            "type": "string"
                        },
                        "example": "sort=id,-created_at"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: tags",
                        "schema": {
                            "type": "string"
                        },
                        "example": "include=tags"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "short_urls.store",
                "tags": [
                    "ShortUrl"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShortUrlStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/short_urls/{id}": {
            "get": {
                "operationId": "short_urls.show",
                "tags": [
                    "ShortUrl"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: tags",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "put": {
                "operationId": "short_urls.update",
                "tags": [
                    "ShortUrl"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShortUrlUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "short_urls.destroy",
                "tags": [
                    "ShortUrl"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tags/exists": {
            "get": {
                "operationId": "tags.exists",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/tags/bulk": {
            "post": {
                "operationId": "tags.store_bulk",
                "summary": "\u6279\u91cf\u65b0\u589e\u6a19\u7c64",
                "tags": [
                    "Tags"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagStoreBulkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "created_count": {
                                                    "type": "integer"
                                                },
                                                "exists_count": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "created_count",
                                                "exists_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "operationId": "tags.index",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "sort by one or more fields. in: id, created_at",
                        "schema": {
                            "type": "string"
                        },
                        "example": "sort=id,-created_at"
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: line_users, short_urls, campaigns",
                        "schema": {
                            "type": "string"
                        },
                        "example": "include=line_users,short_urls,campaigns"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "filter by one or more fields. in: name",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "object",
                                    "properties": {
                                        "$contains": {
                                            "type": "string",
                                            "description": "filter by name. $contains: string",
                                            "example": "filter[name][$contains]=string"
                                        }
                                    }
                                }
                            }
                        },
                        "example": "filter[name][$contains]=string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "tags.store",
                "tags": [
                    "Tags"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "operationId": "tags.show",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "include one or more relationships. in: line_users, short_urls, campaigns",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "tags.destroy",
                "tags": [
                    "Tags"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/templates": {
            "get": {
                "operationId": "templates.index",
                "tags": [
                    "Template"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "templates.store",
                "tags": [
                    "Template"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/templates/{id}": {
            "get": {
                "operationId": "templates.show",
                "tags": [
                    "Template"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "maxLength": 255
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "put": {
                "operationId": "templates.update",
                "tags": [
                    "Template"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "templates.destroy",
                "tags": [
                    "Template"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/template-sync/bucket-data": {
            "get": {
                "operationId": "template-sync.bucket-data",
                "summary": "\u67e5\u770b GCS bucket \u4e2d\u7684\u5b8c\u6574\u8cc7\u6599",
                "tags": [
                    "TemplateSync"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to get bucket data"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "data": {
                                                    "type": "string"
                                                },
                                                "meta": {
                                                    "type": "object",
                                                    "properties": {
                                                        "template_count": {
                                                            "type": "string"
                                                        },
                                                        "file_size": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "template_count",
                                                        "file_size"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "data",
                                                "meta"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No data found in GCS bucket"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "null"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/template-sync/sync-from-gcs": {
            "post": {
                "operationId": "template-sync.sync-from-gcs",
                "summary": "\u5f9e GCS \u540c\u6b65\u5230\u672c\u5730\u8cc7\u6599\u5eab",
                "tags": [
                    "TemplateSync"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u5dee\u7570\u540c\u6b65\u5b8c\u6210"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "synced_at": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data",
                                        "synced_at"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant_settings": {
            "get": {
                "operationId": "tenantSetting.index",
                "description": "\u8fd4\u56de\u6240\u6709\u53ef\u8a2d\u5b9a\u7684\u6b04\u4f4d\u53ca\u5176\u7576\u524d\u503c\u3001\u985e\u578b\u3001\u63cf\u8ff0\u7b49\u8a73\u7d30\u8cc7\u8a0a\u3002",
                "summary": "\u53d6\u5f97\u6240\u6709\u8a2d\u5b9a\u53ca\u5176\u63cf\u8ff0",
                "tags": [
                    "TenantSetting"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 0,
                                    "maxItems": 0,
                                    "additionalItems": false
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "tenantSetting.update",
                "description": "\u66f4\u65b0\u79df\u6236\u7684\u5404\u9805\u8a2d\u5b9a\u503c\uff0c\u652f\u63f4\u90e8\u5206\u66f4\u65b0\uff0c\u53ea\u9700\u50b3\u5165\u8981\u66f4\u65b0\u7684\u6b04\u4f4d\u3002",
                "summary": "\u6279\u91cf\u66f4\u65b0\u8a2d\u5b9a",
                "tags": [
                    "TenantSetting"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TenantSettingBatchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 0,
                                    "maxItems": 0,
                                    "additionalItems": false
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "tenantSetting.destroy",
                "summary": "\u6279\u91cf\u522a\u9664\u8a2d\u5b9a",
                "tags": [
                    "TenantSetting"
                ],
                "parameters": [
                    {
                        "name": "keys",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deleted_count": {
                                                    "type": "integer"
                                                },
                                                "requested_keys": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "deleted_count",
                                                "requested_keys"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/tenant_settings/schema": {
            "get": {
                "operationId": "tenantSetting.schema",
                "description": "\u8fd4\u56de\u6240\u6709\u53ef\u7528\u8a2d\u5b9a\u6b04\u4f4d\u7684\u67b6\u69cb\u5b9a\u7fa9\uff0c\u5305\u542b\u6b04\u4f4d\u985e\u578b\u3001\u9a57\u8b49\u898f\u5247\u3001\u63cf\u8ff0\u7b49\u8cc7\u8a0a\uff0c\n\u53ef\u7528\u65bc\u524d\u7aef\u52d5\u614b\u751f\u6210\u8a2d\u5b9a\u8868\u55ae\u3002",
                "summary": "\u53d6\u5f97\u8a2d\u5b9a\u67b6\u69cb",
                "tags": [
                    "TenantSetting"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 0,
                                    "maxItems": 0,
                                    "additionalItems": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant_settings/validate": {
            "post": {
                "operationId": "tenantSetting.validate",
                "description": "\u9a57\u8b49\u63d0\u4f9b\u7684\u8a2d\u5b9a\u503c\u662f\u5426\u7b26\u5408\u898f\u5247\uff0c\u4e0d\u6703\u5be6\u969b\u5132\u5b58\u8cc7\u6599\u3002\n\u53ef\u7528\u65bc\u524d\u7aef\u5373\u6642\u9a57\u8b49\u6216\u9810\u6aa2\u67e5\u3002",
                "summary": "\u9a57\u8b49\u8a2d\u5b9a\u503c",
                "tags": [
                    "TenantSetting"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TenantSettingBatchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "\u5982\u679c\u901a\u904e TenantSettingBatchRequest \u9a57\u8b49\uff0c\u4ee3\u8868\u683c\u5f0f\u6b63\u78ba",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u8a2d\u5b9a\u9a57\u8b49\u901a\u904e"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "minItems": 0,
                                            "maxItems": 0,
                                            "additionalItems": false
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/tenant_settings/reset": {
            "post": {
                "operationId": "tenantSetting.reset",
                "summary": "\u91cd\u7f6e\u70ba\u9810\u8a2d\u503c",
                "tags": [
                    "TenantSetting"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "\u8a2d\u5b9a\u5df2\u91cd\u7f6e\u70ba\u9810\u8a2d\u503c"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "\u6240\u6709\u8a2d\u5b9a\u5df2\u6e05\u7a7a"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "deleted_count": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "deleted_count"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tenant_settings/clear_cache": {
            "post": {
                "operationId": "tenantSetting.clearCache",
                "summary": "\u6e05\u9664\u5feb\u53d6",
                "tags": [
                    "TenantSetting"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "\u5feb\u53d6\u6e05\u9664\u6210\u529f"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "operationId": "token",
                "tags": [
                    "Token"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenGenerateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/token/refresh": {
            "post": {
                "operationId": "token.refresh",
                "tags": [
                    "Token"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefreshRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/token/revoke": {
            "post": {
                "operationId": "token.revoke",
                "tags": [
                    "Token"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/users/{userId}/senders": {
            "get": {
                "operationId": "users.senders.index",
                "summary": "\u67e5\u8a62\u6307\u5b9a\u7528\u6236\u76ee\u524d\u6240\u6709\u5df2\u95dc\u806f\u7684\u767c\u9001\u8005\u6e05\u55ae",
                "tags": [
                    "UserSender"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includes",
                        "in": "query",
                        "description": "\u8981\u5305\u542b\u7684\u95dc\u806f\u6a21\u578b",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    {
                        "name": "sorts",
                        "in": "query",
                        "description": "\u6392\u5e8f\u689d\u4ef6",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "\u904e\u6ffe\u689d\u4ef6",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "users.senders.replace",
                "summary": "\u5c07\u6307\u5b9a\u7528\u6236\u7684\u767c\u9001\u8005\u95dc\u806f\u6e05\u55ae\u5168\u91cf\u540c\u6b65\u70ba\u672c\u6b21\u9001\u51fa\u7684\u767c\u9001\u8005ID\u6e05\u55ae\uff08\u53d6\u4ee3\u820a\u6709\u95dc\u806f\uff09",
                "tags": [
                    "UserSender"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSenderReplaceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "users.senders.add",
                "summary": "\u65b0\u589e\u4e00\u6279\u767c\u9001\u8005ID\u5230\u6307\u5b9a\u7528\u6236\uff08\u4e0d\u5f71\u97ff\u539f\u6709\u5df2\u5b58\u5728\u7684\u767c\u9001\u8005\u95dc\u806f\uff09",
                "tags": [
                    "UserSender"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSenderBatchAddRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "users.senders.delete-all",
                "summary": "\u79fb\u9664\u6307\u5b9a\u7528\u6236\u8207\u6240\u6709\u767c\u9001\u8005\u7684\u95dc\u806f",
                "tags": [
                    "UserSender"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/senders/{senderId}": {
            "delete": {
                "operationId": "users.senders.delete-specific",
                "summary": "\u79fb\u9664\u6307\u5b9a\u7528\u6236\u8207\u67d0\u500b\u767c\u9001\u8005\u7684\u95dc\u806f",
                "tags": [
                    "UserSender"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "senderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/line_users/{lineUserId}/coupons": {
            "get": {
                "operationId": "line_users.coupons.index",
                "summary": "\u53d6\u5f97\u512a\u60e0\u5238\u5217\u8868",
                "tags": [
                    "lineUsers",
                    "UserCoupon"
                ],
                "parameters": [
                    {
                        "name": "lineUserId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "default: 'coupon'",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserCouponCode"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": []
            }
        },
        "/line_users/{lineUserId}/coupons/{couponCode}": {
            "get": {
                "operationId": "line_users.coupons.show",
                "summary": "\u53d6\u5f97\u55ae\u4e00\u512a\u60e0\u5238",
                "tags": [
                    "lineUsers",
                    "UserCoupon"
                ],
                "parameters": [
                    {
                        "name": "lineUserId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "couponCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "refresh_qr",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/UserCouponCode"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "statusCode",
                                        "message",
                                        "result"
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "AudienceSaveBulkRequest": {
                "type": "object",
                "properties": {
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "tags": {
                                    "type": "array",
                                    "description": "\u53d7\u773e\u5305\u542b\u7684\u6a19\u7c64\n- \u9700\u586b\u5165tags.id \u6216 tags.name",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "short_urls": {
                                    "type": "array",
                                    "description": "\u53d7\u773e\u5305\u542b\u7684\u77ed\u7db2\u5740\n- \u9700\u586b\u5165short_urls.id",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                "audiences": {
                                    "type": "array",
                                    "description": "\u53d7\u773e\u5305\u542b\u7684\u53d7\u773e\n- \u9700\u586b\u5165audiences.id",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            },
                            "required": [
                                "name"
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 500
                    }
                },
                "required": [
                    "audiences"
                ],
                "title": "AudienceSaveBulkRequest"
            },
            "AudienceStoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "description": "\u53d7\u773e\u5305\u542b\u7684\u6a19\u7c64\n- \u9700\u586b\u5165tags.id",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "short_urls": {
                        "type": "array",
                        "description": "\u53d7\u773e\u5305\u542b\u7684\u77ed\u7db2\u5740\n- \u9700\u586b\u5165short_urls.id",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "audiences": {
                        "type": "array",
                        "description": "\u53d7\u773e\u5305\u542b\u7684\u53d7\u773e\n- \u9700\u586b\u5165audiences.id",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "AudienceStoreRequest"
            },
            "AudienceUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "description": "\u53d7\u773e\u5305\u542b\u7684\u6a19\u7c64\n- \u9700\u586b\u5165tags.id",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "short_urls": {
                        "type": "array",
                        "description": "\u53d7\u773e\u5305\u542b\u7684\u77ed\u7db2\u5740\n- \u9700\u586b\u5165short_urls.id",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "audiences": {
                        "type": "array",
                        "description": "\u53d7\u773e\u5305\u542b\u7684\u53d7\u773e\n- \u9700\u586b\u5165audiences.id\u3002\n- \u4e0d\u53ef\u5305\u542b\u81ea\u5df1\u3002",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "title": "AudienceUpdateRequest"
            },
            "CampaignStatus": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "title": "CampaignStatus"
            },
            "CampaignStoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "preview_text": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "description": "2:AI\u63a8\u85a6, 3:LINE\u5b98\u65b9\u5e33\u865f",
                        "enum": [
                            "2",
                            "3"
                        ]
                    },
                    "material_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "material_id2": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "material_id3": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "sender_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "\u982d\u50cfID\n- \u5982\u679c\u6c92\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba `null`\n- \u5982\u679c\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba senders.id"
                    },
                    "start_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "end_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "send_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "\u767c\u9001\u6642\u9593\n- \u5982\u679c\u662f\u7acb\u5373\u767c\u9001\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba `null`"
                    },
                    "status": {
                        "type": "string",
                        "description": "\u72c0\u614b\n- `0`  \u8349\u7a3f\n- `1`  \u555f\u7528\u4e2d\n- `2`  \u5f85\u8655\u7406\n- `3`  \u5df2\u522a\u9664\n- `4`  \u6392\u7a0b\u5931\u6557",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "description": "\u5982\u679c\u662f\u5206\u7fa4\uff0ctags\uff0caudiences\u5176\u4e2d\u4e4b\u4e00\u5fc5\u9808\u70ba\u6709\u503c\u9663\u5217",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "name",
                    "preview_text",
                    "type"
                ],
                "title": "CampaignStoreRequest"
            },
            "CampaignUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "preview_text": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "type": {
                        "type": "string",
                        "description": "2:AI\u63a8\u85a6, 3:LINE\u5b98\u65b9\u5e33\u865f",
                        "enum": [
                            "2",
                            "3"
                        ]
                    },
                    "material_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "material_id2": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "material_id3": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "sender_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "\u982d\u50cfID\n- \u5982\u679c\u6c92\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba `null`\n- \u5982\u679c\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba senders.id"
                    },
                    "start_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "end_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "send_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "\u767c\u9001\u6642\u9593\n- \u5982\u679c\u662f\u7acb\u5373\u767c\u9001\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba `null`"
                    },
                    "status": {
                        "type": "string",
                        "description": "\u72c0\u614b\n- `0`  \u8349\u7a3f\n- `1`  \u555f\u7528\u4e2d\n- `2`  \u5f85\u8655\u7406\n- `3`  \u5df2\u522a\u9664\n- `4`  \u6392\u7a0b\u5931\u6557",
                        "enum": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4"
                        ]
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    "audiences": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    }
                },
                "title": "CampaignUpdateRequest"
            },
            "CouponAssignCodesToUsersRequest": {
                "type": "object",
                "properties": {
                    "line_user_id": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    }
                },
                "required": [
                    "line_user_id"
                ],
                "title": "CouponAssignCodesToUsersRequest"
            },
            "CouponCodeCancelRequest": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "\u55ae\u4e00\u512a\u60e0\u78bc\n- \u5411\u4e0b\u517c\u5bb9\u7684\u820a\u7248\u6b04\u4f4d\n- TODO: \u672a\u4f86\u53ef\u4ee5\u8003\u616e\u79fb\u9664"
                    },
                    "line_user_id": {
                        "type": "string"
                    },
                    "codes": {
                        "type": "array",
                        "description": "\u591a\u7b46\u512a\u60e0\u78bc\u6b04\u4f4d",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "line_user_id"
                ],
                "title": "CouponCodeCancelRequest"
            },
            "CouponCodeLockRequest": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "\u55ae\u4e00\u512a\u60e0\u78bc\n- \u5411\u4e0b\u517c\u5bb9\u7684\u820a\u7248\u6b04\u4f4d\n- TODO: \u672a\u4f86\u53ef\u4ee5\u8003\u616e\u79fb\u9664",
                        "maxLength": 255
                    },
                    "line_user_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "is_locked": {
                        "type": "boolean"
                    },
                    "codes": {
                        "type": "array",
                        "description": "\u591a\u7b46\u512a\u60e0\u78bc\u6b04\u4f4d",
                        "items": {
                            "type": "string",
                            "maxLength": 255
                        }
                    }
                },
                "required": [
                    "line_user_id",
                    "is_locked"
                ],
                "title": "CouponCodeLockRequest"
            },
            "CouponCodeRedeemRequest": {
                "type": "object",
                "properties": {
                    "line_user_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "redeemed_method": {
                        "$ref": "#/components/schemas/RedemptionMethodType"
                    }
                },
                "required": [
                    "line_user_id",
                    "code",
                    "redeemed_method"
                ],
                "title": "CouponCodeRedeemRequest"
            },
            "CouponCodeStatus": {
                "type": "string",
                "enum": [
                    "active",
                    "redeemed",
                    "cancelled",
                    "locked"
                ],
                "title": "CouponCodeStatus"
            },
            "CouponStoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "\u540d\u7a31",
                        "maxLength": 20
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\u6558\u8ff0"
                    },
                    "no_stock_msg_type": {
                        "$ref": "#/components/schemas/NoStockMessageType"
                    },
                    "no_stock_msg": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "\u958b\u59cb\u65e5\u671f\n\u683c\u5f0f\uff1aYYYY-MM-DD"
                    },
                    "end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "input_code_type": {
                        "description": "\u4ee3\u78bc\u8f38\u5165\u985e\u578b\n- items: \u4f7f\u7528 items \u65b9\u5f0f\n- upload: \u4e0a\u50b3 csv \u6a94\u6848\n- dynamic: \u52d5\u614b\u751f\u6210\u4ee3\u78bc",
                        "$ref": "#/components/schemas/InputCodeType"
                    },
                    "total_quota": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": -1
                    },
                    "user_quota": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1
                    },
                    "is_unique_code": {
                        "type": "boolean",
                        "description": "\u662f\u5426\u70ba\u552f\u4e00\u78bc\u6a5f\u5236\n- true: \u6bcf\u500b code \u9650\u4e00\u6b21\u4f7f\u7528(codes.limit_qty \u6703\u88ab\u5f37\u88fd\u70ba 1)\n- false: \u4e00\u78bc\u591a\u7528"
                    },
                    "codes": {
                        "type": "object",
                        "description": "\u5982\u679c input_code_type \u70ba items\uff0c\u5247 codes \u5fc5\u586b",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "limit_qty": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "code",
                            "limit_qty"
                        ]
                    },
                    "code_file": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream",
                        "description": "\u5982\u679c input_code_type \u70ba upload\uff0c\u5247 code_file \u5fc5\u586b\u3002\u5fc5\u9808\u662f csv \u6a94\u6848"
                    },
                    "redemption_methods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RedemptionMethodType"
                        },
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "style": {
                        "type": "object",
                        "properties": {
                            "background_image": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "background_color": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "name",
                    "no_stock_msg",
                    "start_date",
                    "input_code_type",
                    "user_quota",
                    "is_unique_code",
                    "redemption_methods"
                ],
                "title": "CouponStoreRequest"
            },
            "CouponUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "no_stock_msg_type": {
                        "$ref": "#/components/schemas/NoStockMessageType"
                    },
                    "no_stock_msg": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "\u958b\u59cb\u65e5\u671f\n\u683c\u5f0f\uff1aYYYY-MM-DD"
                    },
                    "end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "input_code_type": {
                        "description": "\u4ee3\u78bc\u8f38\u5165\u985e\u578b\n- items: \u4f7f\u7528 items \u65b9\u5f0f\n- upload: \u4e0a\u50b3 csv \u6a94\u6848\n- dynamic: \u52d5\u614b\u751f\u6210\u4ee3\u78bc",
                        "$ref": "#/components/schemas/InputCodeType"
                    },
                    "total_quota": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": -1
                    },
                    "user_quota": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1
                    },
                    "is_unique_code": {
                        "type": "string",
                        "description": "\u662f\u5426\u70ba\u552f\u4e00\u78bc\u6a5f\u5236\n- \u4fee\u6539\u6642\u6b64\u6b04\u4f4d\u4e0d\u53ef\u5b58\u5728\uff0c\u56e0\u7232\u4e0d\u5141\u8a31\u8b8a\u66f4\n- true: \u6bcf\u500b code \u9650\u4e00\u6b21\u4f7f\u7528(codes.limit_qty \u6703\u88ab\u5f37\u88fd\u70ba 1)\n- false: \u4e00\u78bc\u591a\u7528"
                    },
                    "codes": {
                        "type": "object",
                        "description": "\u5982\u679c input_code_type \u70ba items\uff0c\u5247 codes \u5fc5\u586b",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "limit_qty": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "code",
                            "limit_qty"
                        ]
                    },
                    "code_file": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream",
                        "description": "\u5982\u679c input_code_type \u70ba upload\uff0c\u5247 code_file \u5fc5\u586b\u3002\u5fc5\u9808\u662f csv \u6a94\u6848"
                    },
                    "redemption_methods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RedemptionMethodType"
                        },
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "style": {
                        "type": "object",
                        "properties": {
                            "background_image": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "background_color": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        }
                    }
                },
                "title": "CouponUpdateRequest"
            },
            "FileUploadRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "video",
                            "image"
                        ]
                    },
                    "file": {
                        "type": "string",
                        "description": "\u4e0a\u50b3\u7684\u6a94\u6848\u3002\n- \u7576 type \u70ba video \u6642\uff0c\u6a94\u6848\u5927\u5c0f\u4e0d\u53ef\u8d85\u904e 200MB\u3002\u6a94\u6848\u683c\u5f0f\u50c5\u9650\u65bc mp4, avi, mov, wmv, flv, mkv, webm, mpeg, mpg, 3gp, 3g2, m4v, f4v, f4p, f4a, f4b\n- \u7576 type \u70ba image \u6642\uff0c\u6a94\u6848\u5927\u5c0f\u4e0d\u53ef\u8d85\u904e 1MB\u3002\u6a94\u6848\u683c\u5f0f\u50c5\u9650\u65bc jpeg, png, jpg, gif, svg"
                    }
                },
                "required": [
                    "type",
                    "file"
                ],
                "title": "FileUploadRequest"
            },
            "InputCodeType": {
                "type": "string",
                "enum": [
                    "items",
                    "upload",
                    "dynamic"
                ],
                "title": "InputCodeType"
            },
            "InviteRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "\u6a19\u984c"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "face_img": {
                        "type": "string",
                        "format": "uri",
                        "description": "\u6d77\u5831banner 1:1"
                    },
                    "invite_face_img": {
                        "type": "string",
                        "format": "uri",
                        "description": "\u770b\u6392\u884cbanner 4:3"
                    },
                    "content": {
                        "type": "string",
                        "description": "\u88ab\u5206\u4eab\u8005\u770b\u5230\u5167\u5bb9"
                    },
                    "share_banner": {
                        "type": "string",
                        "format": "uri",
                        "description": "\u88ab\u5206\u4eab\u8005\u770b\u5230banner 2:3"
                    },
                    "top_img": {
                        "type": "string",
                        "format": "uri",
                        "description": "\u6392\u884c\u699cbanner 6:2"
                    },
                    "top_limit": {
                        "type": "integer",
                        "description": "\u6392\u884c\u699c\u986f\u793a\u6578\u91cf"
                    }
                },
                "required": [
                    "title",
                    "status",
                    "face_img",
                    "invite_face_img",
                    "content",
                    "share_banner",
                    "top_img",
                    "top_limit"
                ],
                "title": "InviteRequest"
            },
            "KeywordAnswerTypes": {
                "type": "string",
                "enum": [
                    "image",
                    "imagemap",
                    "text",
                    "card"
                ],
                "title": "KeywordAnswerTypes"
            },
            "KeywordStoreRequest": {
                "type": "object",
                "properties": {
                    "keyword": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "list_order": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_quick_reply": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "extend_keywords": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "keyword": {
                                    "type": "string",
                                    "maxLength": 200
                                }
                            },
                            "required": [
                                "keyword"
                            ]
                        }
                    },
                    "keyword_message_answers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "$ref": "#/components/schemas/KeywordAnswerTypes"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "\u95dc\u9375\u5b57\u56de\u61c9\u7684\u8a0a\u606f\u5167\u5bb9\n- \u7576 type \u70ba text \u6642\uff0cmessage \u70ba string\n- \u7576 type \u70ba image \u6642\uff0cmessage \u70ba string\n- \u7576 type \u70ba imagemap \u6642\uff0cmessage \u70ba array\n- \u7576 type \u70ba card \u6642\uff0cmessage \u70ba string\u3002 \u70ba materials.id"
                                },
                                "response_order": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "is_end": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "type",
                                "message",
                                "response_order",
                                "is_end"
                            ]
                        }
                    }
                },
                "required": [
                    "keyword",
                    "extend_keywords",
                    "keyword_message_answers"
                ],
                "title": "KeywordStoreRequest"
            },
            "KeywordUpdateRequest": {
                "type": "object",
                "properties": {
                    "keyword": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "list_order": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "is_quick_reply": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "extend_keywords": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "keyword": {
                                    "type": "string",
                                    "maxLength": 200
                                }
                            },
                            "required": [
                                "keyword"
                            ]
                        }
                    },
                    "keyword_message_answers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "$ref": "#/components/schemas/KeywordAnswerTypes"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "\u95dc\u9375\u5b57\u56de\u61c9\u7684\u8a0a\u606f\u5167\u5bb9\n- \u7576 type \u70ba text \u6642\uff0cmessage \u70ba string\n- \u7576 type \u70ba image \u6642\uff0cmessage \u70ba string\n- \u7576 type \u70ba imagemap \u6642\uff0cmessage \u70ba array\n- \u7576 type \u70ba card \u6642\uff0cmessage \u70ba string\u3002 \u70ba materials.id"
                                },
                                "response_order": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "is_end": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "type",
                                "message",
                                "response_order",
                                "is_end"
                            ]
                        }
                    }
                },
                "title": "KeywordUpdateRequest"
            },
            "LineUserBatchTaggingTagRequest": {
                "type": "object",
                "properties": {
                    "line_users": {
                        "type": "object",
                        "description": "- line_users.ids \u548c line_users.emails \u5169\u8005\u5fc5\u9808\u81f3\u5c11\u6709\u4e00\u500b\u5b58\u5728\n- line_users.ids \u548c line_users.emails \u7684\u7e3d\u6578\u91cf\u4e0d\u80fd\u8d85\u904e 400",
                        "properties": {
                            "line_user_ids": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1
                            },
                            "emails": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "email"
                                },
                                "minItems": 1
                            }
                        }
                    },
                    "tags": {
                        "type": "object",
                        "description": "- tags.ids \u548c tags.names \u5169\u8005\u5fc5\u9808\u81f3\u5c11\u6709\u4e00\u500b\u5b58\u5728\n- tags.ids \u548c tags.names \u7684\u7e3d\u6578\u91cf\u4e0d\u80fd\u8d85\u904e 20",
                        "properties": {
                            "ids": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1
                            },
                            "names": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1
                            }
                        }
                    },
                    "source": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "id": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "line_users",
                    "tags"
                ],
                "title": "LineUserBatchTaggingTagRequest"
            },
            "LineUserTaggingTagRequest": {
                "type": "object",
                "properties": {
                    "line_user_id": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "description": "\u5fc5\u9808\u5b58\u5728\u65bc tags \u8cc7\u6599\u8868\u4e2d\uff0c\u4f46\u4e0d\u5b58\u5728\u7684\u8a71\u8a72\u503c\u4e0d\u6703\u88ab\u5132\u5b58\u3002\n\u5141\u8a31\u5e36\u5165 tag.id \u6216 tag.name",
                        "example": "[\"1\", \"2\", \"3\"] or [\"aaa\", \"bbb\", \"ccc\"]",
                        "items": {
                            "type": "string"
                        }
                    },
                    "source": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "type",
                            "id"
                        ]
                    }
                },
                "required": [
                    "line_user_id",
                    "tags",
                    "source"
                ],
                "title": "LineUserTaggingTagRequest"
            },
            "LineUserUpdateProfileRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "picture_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "status_message": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 4000
                    },
                    "orig_lang": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "title": "LineUserUpdateProfileRequest"
            },
            "LineUserUpdateRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "LineUserUpdateRequest"
            },
            "MarketingScriptExecType": {
                "type": "integer",
                "enum": [
                    1,
                    2,
                    3
                ],
                "title": "MarketingScriptExecType"
            },
            "MarketingScriptInteractiveItem": {
                "type": "string",
                "enum": [
                    "short_url_click",
                    "line_user_join"
                ],
                "title": "MarketingScriptInteractiveItem"
            },
            "MarketingScriptItemConbinationOp": {
                "type": "string",
                "enum": [
                    "and",
                    "or"
                ],
                "title": "MarketingScriptItemConbinationOp"
            },
            "MarketingScriptItemOperate": {
                "type": "string",
                "enum": [
                    "contain",
                    "equal"
                ],
                "title": "MarketingScriptItemOperate"
            },
            "MarketingScriptStoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 300
                    },
                    "exec_action": {
                        "type": "string"
                    },
                    "exec_type": {
                        "description": "\u57f7\u884c\u65b9\u5f0f\n- 1:\u5373\u6642, 2:\u7b49\u5f85\u5e7e\u5c0f\u6642\u5f8c, 3:\u6307\u5b9a\u6642\u9593",
                        "$ref": "#/components/schemas/MarketingScriptExecType"
                    },
                    "exec_dt": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "sender_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "\u982d\u50cfID\n- \u5982\u679c\u6c92\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba `null`\n- \u5982\u679c\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba senders.id"
                    },
                    "start_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "script_items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "interactive_item": {
                                    "$ref": "#/components/schemas/MarketingScriptInteractiveItem"
                                },
                                "operate": {
                                    "$ref": "#/components/schemas/MarketingScriptItemOperate"
                                },
                                "condition": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "- \u7576 interactive_item \u70ba short_url_click \u6642\uff0ccondition \u70ba short_urls.id\n- \u7576 interactive_item \u70ba line_user_join \u6642\uff0ccondition \u70ba\u7a7a",
                                    "maxLength": 100
                                },
                                "conbination_op": {
                                    "$ref": "#/components/schemas/MarketingScriptItemConbinationOp"
                                }
                            },
                            "required": [
                                "interactive_item",
                                "operate"
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 3
                    }
                },
                "required": [
                    "name",
                    "exec_action",
                    "exec_type",
                    "start_at",
                    "script_items"
                ],
                "title": "MarketingScriptStoreRequest"
            },
            "MarketingScriptUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 300
                    },
                    "exec_action": {
                        "type": "string"
                    },
                    "exec_type": {
                        "description": "\u57f7\u884c\u65b9\u5f0f\n- 1:\u5373\u6642, 2:\u7b49\u5f85\u5e7e\u5c0f\u6642\u5f8c, 3:\u6307\u5b9a\u6642\u9593",
                        "$ref": "#/components/schemas/MarketingScriptExecType"
                    },
                    "exec_dt": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "sender_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "\u982d\u50cfID\n- \u5982\u679c\u6c92\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba `null`\n- \u5982\u679c\u6709\u9078\u64c7\u767c\u9001\u8005\uff0c\u5247\u6b64\u6b04\u4f4d\u61c9\u70ba senders.id"
                    },
                    "start_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "script_items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "interactive_item": {
                                    "$ref": "#/components/schemas/MarketingScriptInteractiveItem"
                                },
                                "operate": {
                                    "description": "- \u7576 interactive_item \u70ba short_url_click \u6642\uff0coperate \u70ba equal\n- \u7576 interactive_item \u70ba line_user_join \u6642\uff0coperate \u70ba equal",
                                    "$ref": "#/components/schemas/MarketingScriptItemOperate"
                                },
                                "condition": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "- \u7576 interactive_item \u70ba short_url_click \u6642\uff0ccondition \u70ba short_urls.id\n- \u7576 interactive_item \u70ba line_user_join \u6642\uff0ccondition \u70ba\u7a7a",
                                    "maxLength": 100
                                },
                                "conbination_op": {
                                    "$ref": "#/components/schemas/MarketingScriptItemConbinationOp"
                                }
                            }
                        },
                        "minItems": 1,
                        "maxItems": 3
                    }
                },
                "title": "MarketingScriptUpdateRequest"
            },
            "MaterialConvertLineMessageRequest": {
                "type": "object",
                "properties": {
                    "message_type": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "required": [
                    "message_type",
                    "data"
                ],
                "title": "MaterialConvertLineMessageRequest"
            },
            "MaterialStoreRequest": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "message_type": {
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "data": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "img": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "note": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "message_type",
                    "name"
                ],
                "title": "MaterialStoreRequest"
            },
            "MaterialUpdateRequest": {
                "type": "object",
                "properties": {
                    "template_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "message_type": {
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "data": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "img": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "note": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "MaterialUpdateRequest"
            },
            "NoStockMessageType": {
                "type": "string",
                "enum": [
                    "text",
                    "material"
                ],
                "title": "NoStockMessageType"
            },
            "PlaygroundRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "\u6a19\u984c"
                    },
                    "status": {
                        "type": "boolean",
                        "description": "\u72c0\u614b"
                    },
                    "type": {
                        "type": "string",
                        "description": "\u985e\u578b 1:\u5e78\u904b\u62bd\u7c64 2.\u958b\u5bf6\u7bb1 3.\u522e\u522e\u6a02 4.\u958b\u626d\u86cb",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4"
                        ]
                    },
                    "begin_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "\u958b\u59cb\u6642\u9593"
                    },
                    "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "\u7d50\u675f\u6642\u9593"
                    },
                    "ui_bottom_title": {
                        "type": "string",
                        "description": "\u5927\u6a19"
                    },
                    "ui_bottom_sub_title": {
                        "type": "string",
                        "description": "\u526f\u6a19"
                    },
                    "is_repeat": {
                        "type": "boolean",
                        "description": "\u91cd\u8907\u62bd\u734e 1:\u4e0d\u9650\u52360:\u9650\u5236"
                    },
                    "repeat_num": {
                        "type": "string",
                        "description": "\u91cd\u8907\u6b21\u6578"
                    }
                },
                "required": [
                    "title",
                    "status",
                    "type",
                    "begin_at",
                    "end_at",
                    "ui_bottom_title",
                    "ui_bottom_sub_title",
                    "is_repeat"
                ],
                "title": "PlaygroundRequest"
            },
            "PollRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "\u6a19\u984c"
                    },
                    "question": {
                        "type": "string",
                        "description": "\u554f\u984c"
                    },
                    "banner": {
                        "type": "string",
                        "format": "uri",
                        "description": "\u6a6b\u5e45 5:3"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "vote_option": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "\u9078\u9805\u6a19\u984c"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "\u9078\u9805\u540d\u7a31"
                                },
                                "img": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "\u9078\u9805\u5716\u7247 3:2"
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "\u9078\u9805\u63cf\u8ff0"
                                },
                                "labels": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "label": {
                                                "type": "string",
                                                "description": "\u9078\u9805\u6309\u9215\u6a19\u7c64"
                                            },
                                            "link": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "\u9078\u9805\u6309\u9215\u9023\u7d50"
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "title",
                                "name",
                                "img",
                                "desc"
                            ]
                        }
                    }
                },
                "required": [
                    "title",
                    "question",
                    "banner",
                    "status",
                    "vote_option"
                ],
                "title": "PollRequest"
            },
            "Prize": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "activity_playground_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "win_rate": {
                        "type": "number"
                    },
                    "stock": {
                        "type": "integer"
                    },
                    "image": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "product_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "activity_playground_id",
                    "name",
                    "description",
                    "start_at",
                    "end_at",
                    "win_rate",
                    "stock",
                    "image",
                    "product_url",
                    "created_at",
                    "updated_at"
                ],
                "title": "Prize"
            },
            "RedemptionMethodType": {
                "type": "string",
                "enum": [
                    "qr_code",
                    "code_copy",
                    "slide"
                ],
                "title": "RedemptionMethodType"
            },
            "RichmenuAssignToUserRequest": {
                "type": "object",
                "properties": {
                    "line_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "line_user_id"
                ],
                "title": "RichmenuAssignToUserRequest"
            },
            "RichmenuSetDefaultRequest": {
                "type": "object",
                "properties": {
                    "is_default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "is_default"
                ],
                "title": "RichmenuSetDefaultRequest"
            },
            "RichmenuStoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "width": {
                        "type": "number",
                        "minimum": 2500
                    },
                    "height": {
                        "type": "number",
                        "enum": [
                            "1686",
                            "843"
                        ]
                    },
                    "chat_bar_text": {
                        "type": "string",
                        "maxLength": 14
                    },
                    "image_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "\u9019\u500b\u6b04\u4f4d\u662f\u7528\u4f86\u5224\u65b7\u662f\u5426\u8981\u5c07\u9019\u500bRichmenu\u8a2d\u70ba\u4e3b\u8981\u9078\u55ae\u3002\n- default: false"
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "\u9019\u500b\u6b04\u4f4d\u662f\u7528\u4f86\u5224\u65b7\u662f\u5426\u8981\u555f\u7528\u9019\u500bRichmenu\u3002\n- default: true"
                    },
                    "note": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "areas": {
                        "type": "array",
                        "description": "\u4e92\u52d5\u5340\u584a\u8a2d\u5b9a",
                        "items": {
                            "type": "object",
                            "properties": {
                                "bounds": {
                                    "type": "object",
                                    "properties": {
                                        "x": {
                                            "type": "number"
                                        },
                                        "y": {
                                            "type": "number"
                                        },
                                        "width": {
                                            "type": "number"
                                        },
                                        "height": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "width",
                                        "height"
                                    ]
                                },
                                "action": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "message",
                                                "uri",
                                                "switchRichmenu"
                                            ]
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "\u9019\u500b\u6b04\u4f4d\u53ef\u4ee5\u63a5\u53d7 string \u6216 integer \u4f5c\u70ba\u8f38\u5165\u503c\u985e\u578b\u3002\n- \u7576 type = \"message\" \u6642\uff0c\u53c3\u6578\u5fc5\u9808\u662f string\u3002\n- \u7576 type = \"uri\" \u6642\uff0c\u53c3\u6578\u5fc5\u9808\u662f\u53ef\u7528\u7684 URL\u3002\n- \u7576 type = \"switchRichmenu\" \u6642\uff0c\u53c3\u6578\u5fc5\u9808\u662f integer\uff0c\u4e14\u662f\u5b58\u5728\u7684Richmenu id\u3002"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "data"
                                    ]
                                }
                            },
                            "required": [
                                "bounds",
                                "action"
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 20
                    }
                },
                "required": [
                    "name",
                    "width",
                    "height",
                    "chat_bar_text",
                    "image_url",
                    "areas"
                ],
                "title": "RichmenuStoreRequest"
            },
            "RichmenuUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "width": {
                        "type": "number",
                        "minimum": 2500
                    },
                    "height": {
                        "type": "number",
                        "enum": [
                            "1686",
                            "843"
                        ]
                    },
                    "chat_bar_text": {
                        "type": "string",
                        "maxLength": 14
                    },
                    "image_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "is_default": {
                        "type": "boolean",
                        "description": "\u9019\u500b\u6b04\u4f4d\u662f\u7528\u4f86\u5224\u65b7\u662f\u5426\u8981\u5c07\u9019\u500bRichmenu\u8a2d\u70ba\u4e3b\u8981\u9078\u55ae\u3002"
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "\u9019\u500b\u6b04\u4f4d\u662f\u7528\u4f86\u5224\u65b7\u662f\u5426\u8981\u555f\u7528\u9019\u500bRichmenu\u3002"
                    },
                    "note": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "areas": {
                        "type": "array",
                        "description": "\u4e92\u52d5\u5340\u584a\u8a2d\u5b9a",
                        "items": {
                            "type": "object",
                            "properties": {
                                "bounds": {
                                    "type": "object",
                                    "properties": {
                                        "x": {
                                            "type": "number"
                                        },
                                        "y": {
                                            "type": "number"
                                        },
                                        "width": {
                                            "type": "number"
                                        },
                                        "height": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "x",
                                        "y",
                                        "width",
                                        "height"
                                    ]
                                },
                                "action": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "message",
                                                "uri",
                                                "switchRichmenu"
                                            ]
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "\u9019\u500b\u6b04\u4f4d\u53ef\u4ee5\u63a5\u53d7 string \u6216 integer \u4f5c\u70ba\u8f38\u5165\u503c\u985e\u578b\u3002\n- \u7576 type = \"message\" \u6642\uff0c\u53c3\u6578\u5fc5\u9808\u662f string\u3002\n- \u7576 type = \"uri\" \u6642\uff0c\u53c3\u6578\u5fc5\u9808\u662f\u53ef\u7528\u7684 URL\u3002\n- \u7576 type = \"switchRichmenu\" \u6642\uff0c\u53c3\u6578\u5fc5\u9808\u662f integer\uff0c\u4e14\u662f\u5b58\u5728\u7684Richmenu id\u3002"
                                        }
                                    },
                                    "required": [
                                        "type",
                                        "data"
                                    ]
                                }
                            },
                            "required": [
                                "bounds",
                                "action"
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 20
                    }
                },
                "title": "RichmenuUpdateRequest"
            },
            "SenderStoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "\u540d\u7a31",
                        "maxLength": 20
                    },
                    "icon_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "\u5716\u793a URL",
                        "maxLength": 300
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "\u662f\u5426\u555f\u7528"
                    }
                },
                "required": [
                    "name",
                    "icon_url",
                    "is_active"
                ],
                "title": "SenderStoreRequest"
            },
            "SenderUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "\u540d\u7a31",
                        "maxLength": 20
                    },
                    "icon_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "\u5716\u793a URL",
                        "maxLength": 300
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "\u662f\u5426\u555f\u7528"
                    }
                },
                "title": "SenderUpdateRequest"
            },
            "ShortUrlStoreRequest": {
                "type": "object",
                "properties": {
                    "slug": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\u8b58\u5225\u78bc\uff0c\u6700\u591a 6 \u500b\u5b57\u5143",
                        "maxLength": 6
                    },
                    "original_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "utm_source": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_medium": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_campaign": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_term": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_content": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "\u662f\u5426\u555f\u7528\n- true: \u555f\u7528, false: \u505c\u7528",
                        "default": true
                    },
                    "is_liff": {
                        "type": "boolean",
                        "description": "\u662f\u5426\u901a\u904e LIFF \u9a57\u8b49\n- true: \u662f, false: \u5426",
                        "default": true
                    },
                    "tags": {
                        "type": "array",
                        "description": "\u9700\u586b\u5165\u5b58\u5728\u7684 tags.id",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "original_url",
                    "title"
                ],
                "title": "ShortUrlStoreRequest"
            },
            "ShortUrlUpdateRequest": {
                "type": "object",
                "properties": {
                    "slug": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\u8b58\u5225\u78bc\uff0c\u6700\u591a 6 \u500b\u5b57\u5143",
                        "maxLength": 6
                    },
                    "original_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "utm_source": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_medium": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_campaign": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_term": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "utm_content": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "is_active": {
                        "type": "boolean",
                        "description": "\u662f\u5426\u555f\u7528\n- true: \u555f\u7528, false: \u505c\u7528"
                    },
                    "is_liff": {
                        "type": "boolean",
                        "description": "\u662f\u5426\u901a\u904e LIFF \u9a57\u8b49\n- true: \u662f, false: \u5426"
                    },
                    "tags": {
                        "type": "array",
                        "description": "\u9700\u586b\u5165\u5b58\u5728\u7684 tags.id",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "title": "ShortUrlUpdateRequest"
            },
            "StorePrizeRequest": {
                "type": "object",
                "properties": {
                    "activity_playground_id": {
                        "type": "integer",
                        "description": "\u6d3b\u52d5id"
                    },
                    "prizes": {
                        "type": "array",
                        "description": "\u734e\u9805\u9663\u5217",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "\u734e\u9805\u540d\u7a31"
                                },
                                "description": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "\u734e\u9805\u63cf\u8ff0"
                                },
                                "start_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "\u958b\u59cb\u6642\u9593"
                                },
                                "end_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "\u7d50\u675f\u6642\u9593"
                                },
                                "win_rate": {
                                    "type": "number",
                                    "description": "\u4e2d\u734e\u6a5f\u7387",
                                    "minimum": 0,
                                    "maximum": 100
                                },
                                "stock": {
                                    "type": "integer",
                                    "description": "\u5eab\u5b58",
                                    "minimum": 0
                                },
                                "image": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "format": "uri",
                                    "description": "\u5716\u7247"
                                },
                                "product_url": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "format": "uri",
                                    "description": "\u5546\u54c1\u7db2\u5740"
                                }
                            },
                            "required": [
                                "name",
                                "start_at",
                                "end_at",
                                "win_rate",
                                "stock"
                            ]
                        },
                        "minItems": 1
                    }
                },
                "required": [
                    "activity_playground_id",
                    "prizes"
                ],
                "title": "StorePrizeRequest"
            },
            "TagStoreBulkRequest": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 100
                                },
                                "description": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "maxLength": 300
                                }
                            },
                            "required": [
                                "name"
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 500
                    }
                },
                "required": [
                    "tags"
                ],
                "title": "TagStoreBulkRequest"
            },
            "TagStoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 300
                    }
                },
                "required": [
                    "description"
                ],
                "title": "TagStoreRequest"
            },
            "TemplateStoreRequest": {
                "type": "object",
                "properties": {
                    "message_type": {
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "data": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "note": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "img": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "img_m": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                },
                "required": [
                    "message_type",
                    "name"
                ],
                "title": "TemplateStoreRequest"
            },
            "TemplateUpdateRequest": {
                "type": "object",
                "properties": {
                    "message_type": {
                        "type": "string",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "data": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "note": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "img": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "img_m": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                },
                "title": "TemplateUpdateRequest"
            },
            "TenantSettingBatchRequest": {
                "type": "object",
                "properties": {
                    "email_bound_richmenu_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "\u7528\u6236\u5df2\u7d81\u5b9a Email \u6642\u986f\u793a\u7684 Rich Menu ID",
                        "example": "richmenu-001",
                        "maxLength": 255
                    }
                },
                "title": "TenantSettingBatchRequest"
            },
            "TokenGenerateRequest": {
                "type": "object",
                "properties": {
                    "service": {
                        "type": "string"
                    }
                },
                "required": [
                    "service"
                ],
                "title": "TokenGenerateRequest"
            },
            "TokenRefreshRequest": {
                "type": "object",
                "properties": {
                    "refresh_token": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh_token"
                ],
                "title": "TokenRefreshRequest"
            },
            "UpdatePrizeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "win_rate": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100
                    },
                    "stock": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "image": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "product_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    }
                },
                "required": [
                    "name",
                    "start_at",
                    "end_at",
                    "win_rate",
                    "stock"
                ],
                "title": "UpdatePrizeRequest"
            },
            "UserCouponCode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "coupon_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "line_user_id": {
                        "type": "string"
                    },
                    "coupon_code_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "$ref": "#/components/schemas/CouponCodeStatus"
                    },
                    "coupon_snapshot": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "redeemed_method": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "redeemed_by": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "redeemed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "cancelled_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "coupon_id",
                    "line_user_id",
                    "coupon_code_id",
                    "code",
                    "status",
                    "coupon_snapshot",
                    "redeemed_method",
                    "redeemed_by",
                    "redeemed_at",
                    "cancelled_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserCouponCode"
            },
            "UserSenderBatchAddRequest": {
                "type": "object",
                "properties": {
                    "sender_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "sender_ids"
                ],
                "title": "UserSenderBatchAddRequest"
            },
            "UserSenderReplaceRequest": {
                "type": "object",
                "properties": {
                    "sender_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "sender_ids"
                ],
                "title": "UserSenderReplaceRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}